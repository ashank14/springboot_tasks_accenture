spring.application.name=spring_project
server.port=${PORT:8080}
# H2 Database
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:dcbapp
spring.h2.console.path=/h2-console
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Resilience4j Circuit Breaker configuration
resilience4j.circuitbreaker.instances.googleApiBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.googleApiBreaker.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.googleApiBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.googleApiBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.googleApiBreaker.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.googleApiBreaker.permittedNumberOfCallsInHalfOpenState=3

# Crucial: Explicitly record network-related exceptions as failures for Circuit Breaker
resilience4j.circuitbreaker.instances.googleApiBreaker.recordExceptions[0]=java.net.ConnectException
resilience4j.circuitbreaker.instances.googleApiBreaker.recordExceptions[1]=java.net.SocketTimeoutException
resilience4j.circuitbreaker.instances.googleApiBreaker.recordExceptions[2]=java.net.UnknownHostException
resilience4j.circuitbreaker.instances.googleApiBreaker.recordExceptions[3]=java.io.IOException
resilience4j.circuitbreaker.instances.googleApiBreaker.recordExceptions[4]=org.springframework.web.reactive.function.client.WebClientRequestException


# Resilience4j Retry configuration
resilience4j.retry.instances.googleApiRetry.maxAttempts=3
resilience44j.retry.instances.googleApiRetry.waitDuration=1s

# Crucial: Explicitly retry on network-related exceptions
resilience4j.retry.instances.googleApiRetry.retryExceptions[0]=java.net.ConnectException
resilience4j.retry.instances.googleApiRetry.retryExceptions[1]=java.net.SocketTimeoutException
resilience4j.retry.instances.googleApiRetry.retryExceptions[2]=java.net.UnknownHostException
resilience4j.retry.instances.googleApiRetry.retryExceptions[3]=java.io.IOException
resilience4j.retry.instances.googleApiRetry.retryExceptions[4]=org.springframework.web.reactive.function.client.WebClientRequestException

resilience4j.circuitbreaker.instances.googleApiBreaker.ignore-exceptions=java.util.NoSuchElementException
resilience4j.retry.instances.googleApiRetry.ignore-exceptions=java.util.NoSuchElementException


#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


#API Key
google.api.key=AIzaSyD6_cE-b63l2ULS769mir0ySpknbihJwhI

google.api.base-url=https://www.googleapis.com/books/v1/volumes


